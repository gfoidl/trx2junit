jobs:
  - job: deploy_nuget
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
      - checkout: none

      - task: DownloadPipelineArtifact@2
        inputs:
          artifactName: 'NuGet-Packed'
          targetPath: './'

      - bash: |
          echo "NuGet-Packed:"
          ls -la .

          if [[ "$TAG_NAME" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)(-(preview-[0-9]+))$ ]]; then
              mkdir deploy_custom
              
              for package in ./*.nupkg; do
                  mv $package deploy_custom
              done
              
              echo "##vso[task.setvariable variable=deploy_custom;]1"
          elif [[ "$TAG_NAME" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
              mkdir deploy_nuget
              
              for package in ./*.nupkg; do
                  mv $package deploy_nuget
              done

              echo "##vso[task.setvariable variable=deploy_nuget;]1"
          else
              echo "no deploy, as $TAG_NAME does not match"
              echo ##vso[task.complete result=Skipped;]tag does not match for deploy
          fi

          echo "-------------------------------------------------"
          echo "custom:"
          ls -la deploy_custom
          echo "-------------------------------------------------"
          echo "nuget:"
          ls -la deploy_nuget
          echo "-------------------------------------------------"
        displayName: 'deploy to nuget / custom'

      - task: NuGetAuthenticate@0
        condition: eq(variables['deploy_custom'], '1')

      - task: NuGetCommand@2
        condition: eq(variables['deploy_custom'], '1')
        inputs:
          command: push
          packagesToPush: deploy_custom/*.nupkg
          nuGetFeedType: 'internal'
          publishVstsFeed: 'github-Projects/gfoidl-public'
        displayName: deploy to custom feed

      - task: NuGetCommand@2
        condition: eq(variables['deploy_nuget'], '1')
        inputs:
          command: push
          packagesToPush: deploy_nuget/*.nupkg
          nuGetFeedType: external
          publishFeedCredentials: 'nuget - gfoidl'
        displayName: deploy to nuget
