jobs:
  - job: build_test
    displayName: build and test
    pool:
      vmImage: 'ubuntu-22.04'
    strategy:
      matrix:
        vectors-enabled:
          TRX2JUNIT_VECTORS_ENABLED: true
        vectors-enabled-no-avx2:
          TRX2JUNIT_VECTORS_ENABLED: true
          DOTNET_EnableAVX: 0
        vectors-enabled-no-fma:
          TRX2JUNIT_VECTORS_ENABLED: true
          DOTNET_EnableFMA: 0
        vectors-enabled-no-sse42:
          TRX2JUNIT_VECTORS_ENABLED: true
          DOTNET_EnableSSE41: 0
    steps:
      # ~Already installed on current hosted agents~
      - template: steps/dotnet-install.yml

      - bash: |
          echo 'installed sdks:'
          dotnet --list-sdks
          echo "-------------------------------------------------"
          echo 'environment variables:'
          env | sort

          chmod u+x ./build.sh
        displayName: init

      - bash: ./build.sh build
        displayName: build

      # coverlet.msbuild must be added as package to the tests
      - bash: |
          if [[ "$DOTNET_ENABLEAVX" == "0" ]]; then
              export DOTNET_EnableAVX=0
              echo "AVX disabled"
          fi

          if [[ "$DOTNET_ENABLEFMA" == "0" ]]; then
              export DOTNET_EnableSSE41=0
              echo "FMA disabled"
          fi

          if [[ "$DOTNET_ENABLESSE41" == "0" ]]; then
              export DOTNET_EnableSSE41=0
              echo "SSE 4.1 disabled"
          fi

          ./build.sh test-coverage
        displayName: test

      - task: PublishTestResults@2
        condition: always()
        inputs:
          testRunner: VSTest
          # no global glob, because of trx-test-files used in the project
          testResultsFiles: 'tests/trx2junit.Core.Tests/TestResults/*.trx'

      - bash: |
            cd tests/Coverage

            workDir="$(System.DefaultWorkingDirectory)"

            if [[ "$AGENT_OS" == "Windows_NT" ]]; then
                # Windows needs special treetment for the substitution due the \
                workDir="${workDir//\\/\\\\}\\\\"
            else
                workDir+="/"
            fi

            # Mac has a different sed, so special case it (hooray for standars ;-))
            if [[ "$AGENT_OS" != "Darwin" ]]; then
                sed -i 's|<source>[^<]*</source>|<source>/</source>|g' "Cobertura.xml"
                sed -i "s|${workDir}||g" "Cobertura.xml"
            else
                sed -i '' 's|<source>[^<]+</source>|<source>/</source>|g' "Cobertura.xml"
                sed -i '' "s|${workDir}||g" "Cobertura.xml"
            fi
        displayName: make Cobertura-paths relative

      # shortcut for PublishPipelineArtifact
      # Coverage report will be created later in a different stage
      - publish: tests/Coverage/Cobertura.xml
        artifact: 'Coverage-$(Agent.JobName)'
        displayName: publish artifact code coverage
