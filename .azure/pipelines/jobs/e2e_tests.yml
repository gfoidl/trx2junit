jobs:
  - job: e2e_tests
    displayName: e2e tests
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifactName: 'NuGet-Packed'
          targetPath: './NuGet-Packed'

      - bash: |
          sudo apt update
          sudo apt install -y libxml2-utils
        displayName: install xml-lint

      - bash: chmod ugo+x ./tests/scripts/*.sh
        displayName: init

      - bash: |
            # copied from build.sh (but modified)
            if [[ -n "$TAG_NAME" ]]; then
                if [[ "$TAG_NAME" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)(-(preview-[0-9]+))?$ ]]; then
                    export VersionMajor="${BASH_REMATCH[1]}"
                    export VersionMinor="${BASH_REMATCH[2]}"
                    export VersionPatch="${BASH_REMATCH[3]}"
                    export VersionSuffix="${BASH_REMATCH[5]}"

                    ToolVersion="$VersionMajor.$VersionMinor.$VersionPatch-$VersionSuffix"
                fi
            fi

            # special handling for pre-releases (is a constraint by .NET Core global tools)
            # and also to prevent installation from NuGet-feed (which may have higher version than the
            # built tool)
            if [[ -z "$ToolVersion" ]]; then
                dotnet tool install -g --configfile=ci-nuget.config trx2junit
            else
                dotnet tool install -g --version="$ToolVersion" --configfile=ci-nuget.config trx2junit
            fi

            echo "##vso[task.prependpath]/home/vsts_azpcontainer/.dotnet/tools"
        displayName: install built trx2junit-tool

      - bash: |
          echo $PATH
          echo "-------------------------------------------------"
          dotnet tool list -g
          echo "-------------------------------------------------"
          trx2junit
        displayName: check tool installation

      - bash: ./tests/scripts/run-samples.sh
        displayName: samples

      - bash: ./tests/scripts/run-single-arg.sh
        displayName: single-arg

      - bash: ./tests/scripts/run-multiple-args.sh
        displayName: multiple-args

      - bash: ./tests/scripts/run-globbing.sh
        displayName: globbing

      - bash: ./tests/scripts/run-no-globbing.sh
        displayName: no-globbing

      - bash: ./tests/scripts/run-different-output-location.sh
        displayName: different-output-location

      - bash: ./tests/scripts/run-junit2trx.sh
        displayName: junit2trx
